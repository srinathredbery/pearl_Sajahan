{"version":3,"sources":["components/Header.js","components/HomePage.js","api/api.js","components/AddCards.js","components/EditCards.js","components/ManageCards.js","components/ManageUsers.js","components/LoginPage.js","firebase.js","contexts/AuthContext.js","components/ForgotPassword.js","components/Signup.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","isNavOpen","setIsNavOpen","dropdownOpen","setDropdownOpen","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","ButtonDropdown","toggle","DropdownToggle","outline","DropdownMenu","DropdownItem","HomePage","Jumbotron","axios","create","baseURL","AddCards","onAdd","name","setName","type","setType","description","setDescription","image","setImage","price","setPrice","isModalOpen","set_isModalOpen","toggleModal","Button","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","htmlFor","Input","value","id","onChange","e","target","maxLength","preventDefault","localImgLocation","split","length","alert","EditCards","onEdit","card","block","disabled","ManageCards","cards","setCards","search","setSearch","filteredCards","setFilteredCards","setWeddingCards","retrieveCards","a","api","get","response","data","useEffect","allCards","getAllCards","addCard","request","post","editCard","put","map","deleteCard","delete","filter","RenderEventCard","onDelete","Card","Badge","color","CardImg","top","src","alt","CardBody","CardTitle","tag","CardSubtitle","new","pill","CardText","style","minHeight","toLowerCase","includes","eventcard","Row","placeholder","ButtonGroup","ManageUsers","users","setUsers","filteredUsers","setFilteredUsers","tempUser","setTempUser","retrieveUsers","allUsers","getAllUsers","editUser","user","deleteUser","email","usercard","index","onDoubleClick","Table","hover","Login","emailRef","useRef","passwordRef","error","setError","loading","history","useHistory","profile","setProfile","emailId","current","password","push","retrieveAuth","allProfiles","getAllProfiles","Alert","onSubmit","innerRef","required","auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","setLoading","onAuthStateChanged","login","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","Provider","ForgotPassword","message","Col","sm","md","size","offset","ref","Signup","passwordConfirmRef","variant","Main","exact","path","component","LoginPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.51d378af.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem,\r\n         ButtonDropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap'; \r\n// import {Button, Modal, ModalHeader, ModalBody, Form, FormGroup,\r\n//         Label, Input } from 'reactstrap';\r\nimport { NavLink, Link} from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n\r\n    const [isNavOpen, setIsNavOpen] = useState(false);\r\n    // const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const toggleNav = () => {\r\n        setIsNavOpen(!isNavOpen);\r\n    }\r\n\r\n    // toggleModal(){\r\n    //     this.setState({\r\n    //         isModalOpen: !this.state.isModalOpen\r\n    //     });\r\n    // }\r\n\r\n    // handleLogin(event){\r\n    //     this.toggleModal();\r\n    //     alert(\"Username: \"+ this.username.value + \" Password: \"+ this.password.value + \" Remember: \"+ this.remember.checked);\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    function toggleDropDown(){\r\n        setDropdownOpen(!dropdownOpen);\r\n        // this.setState({\r\n        //     dropdownOpen: !this.state.dropdownOpen\r\n        // });\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <Navbar dark expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarToggler onClick={toggleNav} />      {/*A button shown at the small screens, which will help to find the nav bar items */}\r\n                <NavbarBrand className=\"mr-5 font-italic\" href=\"/home\">\r\n                    The Pearl\r\n                </NavbarBrand> \r\n                <Collapse isOpen={isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/managecards\">\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Manage Cards\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/manageusers\">\r\n                                <span className=\"fa fa-users fa-lg\"></span> Manage Users\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem>\r\n                        {/* <Button outline onClick={this.toggleModal}>\r\n                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                        </Button> */}\r\n                        <ButtonDropdown isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n                            <DropdownToggle className=\"bg-transparent\" outline>\r\n                                <span className=\"fa fa-user fa-lg\"> Admin</span> \r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem>\r\n                                    <span className=\"fa fa-cog fa-lg\"> Settings</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link to=\"/login\">\r\n                                        <span className=\"fa fa-sign-out fa-lg\"> Logout</span>\r\n                                    </Link>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </ButtonDropdown>\r\n                    </NavItem>\r\n                </Nav>\r\n            </div>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Jumbotron} from 'reactstrap';\r\nimport Header from './Header';\r\n\r\n\r\nfunction HomePage(){\r\n\r\n    //For Firebase\r\n//   const [error, setError] = useState(\"\")\r\n//   const { currentUser, logout } = useAuth()\r\n//   const history = useHistory()\r\n\r\n//   async function handleLogout() {\r\n//     setError(\"\")\r\n\r\n//     try {\r\n//       await logout()\r\n//       history.push(\"/login\")\r\n//     } catch {\r\n//       setError(\"Failed to log out\")\r\n//     }\r\n//   }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Header/>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1 className=\"font-italic\">The Pearl</h1>\r\n                            <h5>Welcome to the admin portal</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://my-json-server.typicode.com/srinathredbery/jsondb/\",\r\n});\r\n","import React, {useState} from 'react';\r\nimport { Form, FormGroup, Input, Label, Button, ModalHeader, Modal, ModalBody } from 'reactstrap';\r\n\r\nconst AddCards = ({onAdd}) => {\r\n    \r\n    const [name, setName] = useState('');\r\n    const [type, setType] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [isModalOpen, set_isModalOpen] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        set_isModalOpen(!isModalOpen);\r\n    };\r\n\r\n    const updateName = e => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const updateType = e => {\r\n        setType(e.target.value);\r\n    };\r\n\r\n    const updateDescription = e => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateImage = e => {\r\n        setImage(e.target.value);\r\n    };\r\n\r\n    const updatePrice = e => {\r\n        setPrice(e.target.value);\r\n    };\r\n\r\n\r\n    // Submit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if(!name || !description || !image || !price){\r\n            alert(\"Please fill the all parts\");\r\n            return\r\n        }\r\n        // console.log(`\\\\assets\\\\${(image.split('\\\\')[(image.split('\\\\')).length - 1])}`);\r\n\r\n        var localImgLocation = (`/assets/${(image.split('\\\\')[(image.split('\\\\')).length - 1])}`);\r\n        \r\n        onAdd({name, type, description, price, image: localImgLocation});\r\n\r\n        setName('');\r\n        setType('');\r\n        setDescription('');\r\n        setImage('');\r\n        setPrice('');\r\n\r\n        toggleModal();\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n        <Button className=\"btn mt-2 mb-2 btn-info\" onClick={toggleModal}>\r\n            <span className=\"fa fa-plus fa-lg\"></span> Add a new card\r\n        </Button>\r\n        <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n            <ModalHeader toggle={toggleModal}>Add a card</ModalHeader>\r\n            <ModalBody>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"name\">Name</Label>\r\n                        <Input type=\"text\" value={name} id=\"name\" onChange={updateName}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"type\">Type</Label>\r\n                        <Input type=\"select\" value={type} id=\"type\" onChange={updateType} >\r\n                            <option></option>\r\n                            <option>Wedding Invitation</option>\r\n                            <option>Conference Invitation</option>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" maxLength=\"60\" value={description} id=\"description\" onChange={updateDescription} />\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" value={price} id=\"price\" onChange={updatePrice}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"image\">Image</Label>\r\n                        <Input type=\"file\" value={image} id=\"image\" onChange={updateImage} />\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" className=\"primary\" onClick={onSubmit}>Add the card</Button>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCards;","import React, {useState} from 'react';\r\nimport { Form, FormGroup, Input, Label, Button, ModalHeader, Modal, ModalBody } from 'reactstrap';\r\n\r\nconst EditCards = ({ onEdit, card }) => {\r\n\r\n    const id = card.id;\r\n    const [name, setName] = useState(card.name);\r\n    const [type, setType] = useState(card.type);\r\n    const [description, setDescription] = useState(card.description);\r\n    const [image, setImage] = useState('');\r\n    const [price, setPrice] = useState(card.price);\r\n    const [isModalOpen, set_isModalOpen] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        set_isModalOpen(!isModalOpen);\r\n    }\r\n\r\n    const updateName = e => {\r\n        setName(e.target.value);\r\n    };\r\n\r\n    const updateType = e => {\r\n        setType(e.target.value);\r\n    };\r\n\r\n    const updateDescription = e => {\r\n        setDescription(e.target.value);\r\n    };\r\n\r\n    const updateImage = e => {\r\n        setImage(e.target.value);\r\n    };\r\n\r\n    const updatePrice = e => {\r\n        setPrice(e.target.value);\r\n    };\r\n\r\n\r\n    //Submit\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        if(!name || !description || !image || !price){\r\n            alert(\"Please fill the all parts\");\r\n            return\r\n        }\r\n\r\n        var localImgLocation = (`/assets/${(image.split('\\\\')[(image.split('\\\\')).length - 1])}`);\r\n        \r\n        onEdit({id, name, type, description, price, image: localImgLocation});\r\n\r\n        setName('');\r\n        setType('');\r\n        setDescription('');\r\n        setImage('');\r\n        setPrice('');\r\n\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <Button className=\"btn-sm bg-primary\" block onClick={toggleModal}>\r\n            Edit\r\n        </Button>\r\n        <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n            <ModalHeader toggle={toggleModal}>Edit the card</ModalHeader>\r\n            <ModalBody>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"id\">Id</Label>\r\n                        <Input type=\"text\" value={id} id=\"id\" disabled/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"name\">Name</Label>\r\n                        <Input type=\"text\" value={name} id=\"name\" onChange={updateName}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"type\">Type</Label>\r\n                        <Input type=\"select\" value={type} id=\"type\" onChange={updateType} >\r\n                            <option>Wedding Invitation</option>\r\n                            <option>Conference Invitation</option>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" maxLength=\"60\" value={description} id=\"description\" onChange={updateDescription} />\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" value={price} id=\"price\" onChange={updatePrice}/>\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"image\">Image</Label>\r\n                        <Input type=\"file\" value={image} id=\"image\" onChange={updateImage} />\r\n                            {/* innerRef={ (input) => this.username = input } */}\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" value=\"submit\" className=\"primary\" onClick={onSubmit}>Save changes</Button>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCards;","import React, {useState,useEffect} from 'react';\r\nimport {Input, Row, Card, CardImg, CardBody, CardTitle, CardText, CardSubtitle, Button, Badge, \r\n        ButtonGroup} from 'reactstrap';\r\nimport api from '../api/api';\r\nimport Header from './Header';\r\nimport AddCards from './AddCards';\r\nimport EditCards from './EditCards';\r\n\r\n\r\nconst ManageCards = () => {\r\n\r\n    const [cards, setCards] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [filteredCards, setFilteredCards] = useState([]);\r\n    const [weddingCards, setWeddingCards] = useState(true);\r\n\r\n\r\n    //Retrieve Cards Data\r\n    const retrieveCards = async () => {\r\n        const response = await api.get('/cards');\r\n        return response.data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getAllCards = async () => {\r\n            const allCards = await retrieveCards();\r\n            if(allCards) setCards(allCards);\r\n        };\r\n\r\n        getAllCards();\r\n    }, []);\r\n\r\n\r\n    //Add a card\r\n    const addCard = async (card) => {\r\n        const request = {\r\n            ...card\r\n        };\r\n\r\n        const response = await api.post('/cards', request);\r\n        setCards([...cards, response.data]);\r\n    };\r\n\r\n\r\n    //Edit the card\r\n    const editCard = async (card) => {\r\n        const response = await api.put(`/cards/${card.id}`, card);\r\n        const {id} = response.data;\r\n        setCards(cards.map( card => {\r\n            return card.id===id ? {...response.data} : card;\r\n        }));\r\n    };\r\n\r\n\r\n    //Delete a card\r\n    const deleteCard = async (id) => {\r\n        await api.delete(`/cards/${id}`);\r\n\r\n        setCards(cards.filter( card => card.id !== id));\r\n    };\r\n\r\n\r\n    // Search Cards\r\n    useEffect( () => {\r\n        setFilteredCards(\r\n            cards.filter( card => {\r\n                return card.name.toLowerCase().includes(search.toLowerCase()) || card.type.toLowerCase().includes(search.toLowerCase())\r\n            })\r\n        )\r\n    }, [search, cards]);\r\n\r\n\r\n    function RenderEventCard({card, onDelete}){\r\n        return(\r\n            <div className=\"container\">\r\n                <Card>\r\n                    <span><Badge color=\"info\">{card.price}</Badge></span>\r\n                    <CardImg top src={card.image} alt=\"Invitation Card\" />\r\n                    <CardBody>\r\n                        <CardTitle tag=\"h5\">{card.name} </CardTitle>\r\n                        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{card.type} {card.new ? <span><Badge pill color=\"danger\">New</Badge></span>:<div></div>}</CardSubtitle>\r\n                        <CardText style={{minHeight:'80px'}}>{card.description}</CardText>\r\n                        <EditCards onEdit={editCard} card={card}/>{' '}\r\n                        <Button className=\"btn-sm bg-danger\" block onClick={onDelete}>Delete</Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    const eventcard = filteredCards.map((card) => {     //Here we are mapping the filtered cards for the searching purposes\r\n\r\n        return(\r\n            <div key={card.id} className=\"col-sm-4 col-md-3\">\r\n                    <RenderEventCard card={card} onDelete={() => deleteCard(card.id)}/>\r\n            </div>\r\n        );\r\n    });\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <Row className=\"ml-auto\">\r\n                    <AddCards onAdd={addCard} />\r\n                    <Input className=\"w-50 m-auto\" \r\n                        type=\"search\"\r\n                        placeholder=\"Search\"\r\n                        onChange={e => setSearch(e.target.value)} />\r\n                    <ButtonGroup className=\"m-auto\">\r\n                        <Button color=\"info\" onClick={()=>{setWeddingCards(true)}}>Conference Cards</Button>\r\n                        <Button color=\"info\" onClick={()=>{setWeddingCards(false)}}>Wedding Cards</Button>\r\n                    </ButtonGroup>                \r\n                </Row>\r\n                <div className=\"row\">\r\n                    {/* (weddingCards ? eventcard.filter(card => {return card.type===\"Wedding Invitation\"}): eventcard.filter(card => {return card.type===\"Conference Invitation\"})) */}\r\n                    { cards.length > 0 ? eventcard : 'No cards to show'}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageCards;","import React, {useState, useEffect} from 'react';\r\nimport {Table, Button, ButtonGroup, Input, Modal, ModalHeader, FormGroup, Label, Form, ModalBody} from 'reactstrap';\r\nimport Header from './Header';\r\nimport api from '../api/api';\r\n\r\n\r\n\r\nconst ManageUsers = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [isModalOpen, set_isModalOpen] = useState(false);\r\n    const [tempUser, setTempUser] = useState([]);\r\n\r\n\r\n    //Retrieve Users Data\r\n    const retrieveUsers = async () => {\r\n        const response = await api.get('/users');\r\n        return response.data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getAllUsers = async () => {\r\n            const allUsers = await retrieveUsers();\r\n            if(allUsers) setUsers(allUsers);\r\n        };\r\n\r\n        getAllUsers();\r\n    }, []);\r\n\r\n\r\n    //Edit the user\r\n    const editUser = async (user) => {\r\n        const response = await api.put(`/users/${user.id}`, user);\r\n        const {id} = response.data;\r\n        setUsers(users.map( user => {\r\n            return user.id===id ? {...response.data} : user;\r\n        }));\r\n    };\r\n\r\n\r\n    const updateName = e => {\r\n        setTempUser({...tempUser, name: e.target.value})\r\n        // setName(e.target.value);\r\n    };\r\n\r\n    const updateEmail = e => {        \r\n        setTempUser({...tempUser, email: e.target.value})\r\n        // setEmail(e.target.value);\r\n    };\r\n\r\n    const updateDescription = e => {\r\n        setTempUser({...tempUser, description: e.target.value})\r\n        // setDescription(e.target.value);\r\n    };\r\n\r\n\r\n    // Submit\r\n    const onSubmit = e => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if(!tempUser.name || !tempUser.description || !tempUser.email){\r\n            alert(\"Please fill the all parts\");\r\n            return\r\n        }\r\n\r\n        \r\n        editUser({ id:tempUser.id, name:tempUser.name, email:tempUser.email, description:tempUser.description });\r\n\r\n        // setName('');\r\n        // setEmail('');\r\n        // setDescription('');\r\n\r\n        toggleModal();\r\n\r\n    }\r\n\r\n    \r\n    //Delete user\r\n    const deleteUser = async (id) => {\r\n        await api.delete(`/users/${id}`);\r\n        setUsers(users.filter( user => user.id !== id));\r\n    }\r\n\r\n    // Search User\r\n    useEffect( () => {\r\n        setFilteredUsers(\r\n            users.filter( user => {\r\n                return user.name.toLowerCase().includes(search.toLowerCase()) || user.email.toLowerCase().includes(search.toLowerCase())\r\n            })\r\n        )\r\n    }, [search, users]);\r\n\r\n    const toggleModal = () => {\r\n        set_isModalOpen(!isModalOpen);\r\n    }\r\n\r\n\r\n    const usercard = filteredUsers.map((user, index) => {\r\n        return(\r\n            <tr key={index}>\r\n                <td>{index+1}</td>\r\n                <td>{user.id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.description}</td>\r\n                <td>\r\n                    <ButtonGroup className=\"btn-group-sm\">\r\n                        <Button color=\"primary\"  onClick={() => {toggleModal(); setTempUser(user) }}><span className=\"fa fa-edit\"/> Edit</Button>\r\n                        <Button color=\"danger\" onDoubleClick={ () => deleteUser(user.id)}><span className=\"fa fa-trash-o\"/> Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <Input className=\"w-25 mr-auto mt-2 mb-2\" \r\n                    type=\"search\"\r\n                    placeholder=\"Search\"\r\n                    onChange={e => setSearch(e.target.value)} />\r\n                <Table hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>User ID</th>\r\n                        <th>Name of the user</th>\r\n                        <th>Email ID</th>\r\n                        <th>Description</th>\r\n                        <th>Edit/Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { users.length > 0 ? usercard : <tr><td>No users to show</td></tr>}  \r\n                    </tbody>\r\n                </Table>\r\n                <Modal isOpen={isModalOpen} toggle={toggleModal}>\r\n                    <ModalHeader toggle={toggleModal}>Edit User</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"id\">Id</Label>\r\n                                <Input type=\"text\" value={tempUser.id} id=\"id\" disabled/>\r\n                                    {/* innerRef={ (input) => this.username = input } */}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"name\">Name</Label>\r\n                                <Input type=\"text\" value={tempUser.name} id=\"name\" onChange={updateName}/>\r\n                                    {/* innerRef={ (input) => this.username = input } */}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input type=\"email\" value={tempUser.email} id=\"email\" onChange={updateEmail} />\r\n                                    {/* innerRef={ (input) => this.username = input } */}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"description\">Description</Label>\r\n                                <Input type=\"textarea\" value={tempUser.description} id=\"description\" onChange={updateDescription} />\r\n                                    {/* innerRef={ (input) => this.username = input } */}\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"primary\" onClick={onSubmit}>Update User</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ManageUsers;","import React, {useRef, useState, useEffect} from 'react';\r\nimport {Jumbotron, Form, FormGroup, Label, CardBody, Card,\r\n     CardTitle, Button, Alert, Input} from 'reactstrap';\r\nimport {Link, Redirect, useHistory} from 'react-router-dom';\r\n// import { useAuth } from '../contexts/AuthContext';\r\nimport api from '../api/api';\r\n\r\n\r\nfunction Login(){\r\n\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    // const checkRef = useRef();\r\n    // const {login} = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n    const [profile, setProfile] = useState('');\r\n\r\n    // async function handleSubmit(e){\r\n        // e.preventDefault();\r\n        // try{\r\n        //     setError('')\r\n        //     setLoading(true)\r\n        //     await login(emailRef.current.value, passwordRef.current.value)\r\n        //     history.push(\"/\")\r\n        // }catch{\r\n        //     setError('Failed to Login')\r\n        // }\r\n        // setLoading(false)\r\n    // }\r\n\r\n    async function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(profile.emailId===emailRef.current.value && profile.password===passwordRef.current.value)\r\n        // <Redirect to=\"/home\" /> \r\n            history.push(\"/home\")\r\n        else{ \r\n            setError(\"Incorrect email and/or password\")\r\n        }\r\n    }\r\n\r\n\r\n    //Retrieve Auth Details\r\n    const retrieveAuth = async () => {\r\n        const response = await api.get('/profile');\r\n        return response.data;\r\n    }\r\n    useEffect(() => {\r\n        const getAllProfiles = async () => {\r\n            const allProfiles = await retrieveAuth();\r\n            if(allProfiles) setProfile(allProfiles);\r\n        };\r\n\r\n        getAllProfiles();\r\n    }, []);    \r\n\r\n    return(\r\n        <div className>\r\n            <Jumbotron>\r\n                <div className=\"container\">\r\n                    <div className=\"row row-header\">\r\n                        <div className=\"col-12 col-sm-6\">\r\n                            <h1 className=\"font-italic\">The Pearl</h1>\r\n                            <h5>Welcome to the Login page</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Jumbotron>\r\n            <Card className=\"col-10 col-sm-6 m-auto\">\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">Login</CardTitle>\r\n                    {error && <Alert color=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Input type=\"email\" id=\"email\" name=\"email  \" innerRef={emailRef} required/>\r\n                                {/* innerRef={ (input) => this.username = input } */}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"password\">Password</Label>\r\n                            <Input type=\"password\" id=\"password\" name=\"password\" innerRef={passwordRef} required/>\r\n                                {/* innerRef={ (input) => this.password = input } */}\r\n                        </FormGroup>\r\n                        {/* <FormGroup check> */}\r\n                            {/* <Label check> */}\r\n                                {/* <Input type=\"checkbox\" name=\"remember\" ref={checkRef}/> */}\r\n                                    {/* innerRef={ (input) => this.remember = input } */}\r\n                                {/* Remember Me */}\r\n                            {/* </Label> */}\r\n                        {/* </FormGroup> */}\r\n                        <FormGroup>\r\n                            <Button disabled={loading} type=\"submit\" className=\"mt-2 primary btn-block\" >Login</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// const firebaseConfig = {\r\n\r\n// };\r\n\r\n\r\nimport firebase from 'firebase';\r\n// import 'firebase/auth';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyD84LNC-75xEu9ANWeoRDa7Yu96-HOzqqg\",\r\n    authDomain: \"pearl-268f7.firebaseapp.com\",\r\n    projectId: \"pearl-268f7\",\r\n    storageBucket: \"pearl-268f7.appspot.com\",\r\n    messagingSenderId: \"886935263804\",\r\n    appId: \"1:886935263804:web:2924f33c52f60743c54139\",\r\n    measurementId: \"G-3C5XG47SRJ\"\r\n});\r\n\r\nconst fdb = firebaseApp.firestore();\r\nexport const auth = firebase.auth();\r\n\r\nexport default fdb;\r\n// export default app;\r\n\r\n\r\n","import React, {useContext, useState, useEffect} from 'react';\r\nimport {auth} from '../firebase';\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth(){\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({children}){\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password){\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function login(email, password){\r\n        return auth.signInWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function logout(){\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email){\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user);\r\n            setLoading(false);\r\n        })\r\n        return unsubscribe\r\n    }, []);\r\n\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword\r\n    }\r\n\r\n    return(\r\n        <AuthContext.Provider value={{value}}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Alert, Input, FormGroup, Label, Col } from \"reactstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n\n    // try {\n    //   setMessage(\"\")\n    //   setError(\"\")\n    //   setLoading(true)\n    //   await resetPassword(emailRef.current.value)\n    //   setMessage(\"Check your inbox for further instructions\")\n    // } catch {\n    //   setError(\"Failed to reset password\")\n    // }\n    setLoading(false)\n  }\n\n  return (\n    <>\n    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n      <div className=\"w-100 mt-2\">\n        <Link to=\"/\">Go back</Link>\n      </div>\n      <h3 className=\"text-center mb-3\">Password Reset</h3>\n      {error && <Alert color=\"danger\">{error}</Alert>}\n      {message && <Alert color=\"success\">{message}</Alert>}\n      <Form onSubmit={handleSubmit}>\n        <FormGroup id=\"email\">\n          <Label>Email</Label>\n          <Input type=\"email\" ref={emailRef} required />\n        </FormGroup>\n        <Button disabled={loading} className=\"w-100\" type=\"submit\">\n          Reset Password\n        </Button>\n      </Form>\n    </Col>\n    </>\n  )\n}\n","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert, FormGroup, Label, CardBody, Input } from \"reactstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Signup() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState('')\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    // console.log(emailRef.current.value);\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card className=\"col-10 col-sm-6 m-auto\">\n        <CardBody>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <FormGroup id=\"email\">\n              <Label>Email</Label>\n              <Input type=\"email\" innerRef={emailRef} required />\n            </FormGroup>\n            <FormGroup id=\"password\">\n              <Label>Password</Label>\n              <Input type=\"password\" innerRef={passwordRef} required />\n            </FormGroup>\n            <FormGroup id=\"password-confirm\">\n              <Label>Password Confirmation</Label>\n              <Input type=\"password\" innerRef={passwordConfirmRef} required />\n            </FormGroup>\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </CardBody>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router';\r\n// import Header from './Header';\r\n// import Footer from './Footer';\r\nimport HomePage from './HomePage';\r\nimport ManageCards from './ManageCards';\r\nimport ManageUsers from './ManageUsers';\r\nimport LoginPage from './LoginPage';\r\nimport ForgotPassword from './ForgotPassword';\r\nimport {AuthProvider} from '../contexts/AuthContext';\r\n// import PrivateRoute from './PrivateRoute';\r\nimport Signup from \"./Signup\"\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n        return(\r\n            <div>\r\n                {/* <Header/> */}\r\n                <AuthProvider>\r\n                    <Switch>\r\n                        <Route exact path=\"/home\" component={HomePage}/>\r\n                        <Route exact path=\"/managecards\" component={ManageCards}/>\r\n                        <Route exact path=\"/manageusers\" component={ManageUsers}/>\r\n                        <Route path=\"/login\" component={LoginPage}/>\r\n                        <Route path=\"/signup\" component={Signup} />\r\n                        <Route exact path=\"/forgot-password\" component={ForgotPassword}/>\r\n                        <Redirect to=\"/login\"/>\r\n                    </Switch>\r\n                </AuthProvider>\r\n                {/* <Footer/> */}\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Main;","import Main from './components/Main';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\"> \n        <Main/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}